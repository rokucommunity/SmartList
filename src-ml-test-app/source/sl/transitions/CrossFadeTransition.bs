import "pkg:/source/view/NodeClass.bs"
import "pkg:/source/view/Animation.bs"
import "pkg:/source/core/Utils.bs"
import "pkg:/source/view/transitions/BaseTransition.bs"

namespace sl.transitions

  @node("sl_CrossFadeTransition", "Group")
  class CrossFadeTransition extends mv.transitions.BaseTransition

    public color as string

    public size = [1920, 1080]

    public duration = 2

    private frameAnimation as mv.animations.Generic
    private isPastHalfway = false

    function new()
      super("mv_CrossFadeTransition")
    end function

    private function onFrameAnimationFraction(fraction as float)
      m.top.progress = fraction
      if fraction <= 0.5
        if m.source <> invalid and not m.source.isSameNode(m.target)
          m.source.opacity = 1 - fraction * 2
        end if
      end if
      if fraction >= 0.5 and not m.isPastHalfway
        m.isPastHalfway = true

        if m.target <> invalid
          m.target.opacity = fraction * 2
        end if

        if m.source <> invalid and not m.source.isSameNode(m.target)
          m.source@._setShown(false)
          m.owner.removeChild(m.source)
        end if
        if m.target <> invalid and not m.target.isSameNode(m.source)
          m.owner.appendChild(m.target)

          m.target@._setShown(m.owner.isShown)
        end if
      end if
    end function

    protected override function begin()
      m.isPastHalfway = false

      if m.frameAnimation = invalid
        m.frameAnimation = new mv.animations.Generic(m.top, m.duration)
        m.frameAnimation.observeFraction(m.onFrameAnimationFraction)
      end if
      m.frameAnimation.start()
    end function

  end class
end namespace
