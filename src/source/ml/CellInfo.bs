namespace ml
  class CellPosition
    public position = 0
    public screenPosition = 0
    function new(position as integer, screenPosition as integer)
      m.position = position
      if screenPosition = invalid or screenPosition = -1
        m.screenPosition = 0
      else
        m.screenPosition = screenPosition
      end if
    end function
  end class

  class CellInfo
    public id = ""
    public size = [0, 0]
    public index = 0
    public contentIndex = 0
    public componentIndex = 0
    public component as mc.types.node
    public focusSettings as mc.types.node
    public direction = 0
    public positions = []
    public isFlowFocusAllowed = false

    public function new(size as mc.types.array, focusSettings as mc.types.node, positions as mc.types.array, isFlowFocusAllowed = false as boolean, componentIndex = 0 as integer, contentIndex = 0 as integer)
      m.size = size
      m.focusSettings = focusSettings
      m.positions = positions
      m.isFlowFocusAllowed = isFlowFocusAllowed
      m.componentIndex = componentIndex
      m.contentIndex = contentIndex
    end function

    public function getPosition(direction as integer) as integer
      if direction < 1
        direction = 0
      end if
      position = m.positions[direction]
      return position.position
    end function

    public function getScreenPosition(direction as integer) as integer
      if direction < 1
        direction = 0
      end if
      position = m.positions[direction]
      return position.screenPosition
    end function

    public function getScrollOffset(direction as integer) as integer
      ' position = m.positions[0]
      if direction < 1
        direction = 0
      end if
      position = m.positions[direction]
      return -position.position + position.screenPosition
    end function

    public function isFlowFocusPossible(scrollOffset as integer, maxOffset as integer, direction as integer, axes as integer) as boolean
      if not m.isFlowFocusAllowed
        return false
      end if

      scrollPos = -scrollOffset
      maxPos = scrollPos + maxOffset
      'TODO - put the size in here, too!
      ' if direction = -1 or direction = 0
      '   position = m.getPosition(direction)
      '   ? "pppppp iFFP UP SP " ; scrollPos ; " MO "; scrollPos - maxOffset ; " O "; position
      '   return position > scrollPos
      ' else
      position = m.getPosition(direction)
      return position >= scrollPos and position + m.size[axes] <= maxPos
      ' end if

    end function

  end class

end namespace

namespace ml.CellInfoUtils
  function cellInfoFromAA(otherInfo as mc.types.assocarray)
    if otherInfo <> invalid
      info = new ml.CellInfo(otherInfo.size, otherInfo.focusSettings, otherInfo.positions, otherInfo.isFlowFocusAllowed, otherInfo.componentIndex, otherInfo.contentIndex)
      info.index = otherInfo.index
      info.id = otherInfo.id
      info.component = otherInfo.component
    else
      info = new ml.CellInfo([0, 0], invalid, [], false, -1, -1)
      info.index = -1
      info.id = ""
    end if
    return info
  end function
end namespace
