import "pkg:/source/sl/cells/BaseCell.bs"

@node("DisneyHeroCell", "sl_BaseCell")
class DisneyHeroCell extends sl.BaseCell

  private poster
  private bgRect
  private textRect

  private isViewCreated = false
  private size = [1400, 850]
  private scale = 1

  function new()
    super()
  end function

  private mask as mc.types.node
  protected override function createViews() as void

    m.bgRect = sc.createSGNode("mv_Rectangle", m.top, "textRect", {
      size: m.size
      color: "#ffffff"
      opacity: 0
      translation: [0, 0]
      size: m.size
    })
    m.mask = sc.createSGNode("MaskGroup", m.top, "posterMask", {
      maskSize: [1400, 850]
      maskOffset: [0, 0]
      maskOffset: [1, 1]
      maskUri: "pkg:/images/mask.png"
    })
    m.mask.clippingRect = [0, 0, 1400, 850]
    m.poster = sc.createSGNode("mv_Poster", m.mask, "poster", {
      translation: [-400, 0]
      loadWidth: m.size[0]
      loadHeight: m.size[1]
      size: m.size
      loadDisplayMode: "zoomToFill"
    })
  end function

  protected override function onShowWithContent(content as mc.types.node)
    m.poster.width = m.size[0]
    m.poster.height = m.size[1]
    m.setFocusState(0, true, 1)

    m.poster.uri = `pkg:/images/movies/${(m.index + 1) mod 7}.jpg`
  end function


  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  '++ delegate
  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

  private function onDidGainFocus(event as sl.ListEvent)
    m.setFocusState(1, true, event.direction)
  end function

  private function onDidLoseFocus(event as sl.ListEvent)
    m.setFocusState(1, false, event.direction)
  end function

  private function onGainingFocus(event as sl.ListEvent)
    m.setFocusState(event.fraction, true, event.direction)
  end function

  private function onLosingFocus(event as sl.ListEvent)
    m.setFocusState(event.fraction, false, event.direction)
  end function

  private function setFocusState(fraction as float, isGaining as boolean, direction as integer) as void

    if fraction > 1
      fraction = 1
    end if

    if isGaining
      if direction = 1
        m.poster.translation = [-400 + (fraction * 400), 0]
      else
        m.poster.translation = [400 - (fraction * 400), 0]
      end if
    else
      if direction = 1
        m.poster.translation = [fraction * 400, 0]
      end if
    end if
  end function
end class
